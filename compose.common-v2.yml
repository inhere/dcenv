#
# 这是一份v2公共配置
# v2 版本支持 `extends` 选项。可以把此文件当做公共文件继承。
#
# 在生产环境不推荐暴露 mysql redis elasticsearch 等服务的端口
# the service links can not be extended.
# 注意： 相对路径是相对于当前配置文件
#

version: '2'
services:
  mysql:
    image: mysql
    container_name: mysql
    ports:
      - "3306:3306"
    volumes:
      - mysql-data:/var/lib/mysql
    environment:
      TIMEZONE: Asia/Shanghai
      MYSQL_ROOT_PASSWORD: password

  mongo:
    # image: mongo
    build:
      context: .
      dockerfile: ./services/mongo/Dockerfile
      args:
        timezone: Asia/Shanghai
    container_name: mongo
    ports:
      - "27017:27017"
    volumes:
      - mongo-data:/data/db:rw
      - mongo-configdb:/data/configdb:rw

  memcached:
    image: memcached
    container_name: memcached
    # ports:
    #   - "11211:11211"

  redis:
    # image: redis
    build:
      # define the context dir, copy and move file will reference it on the Dockerfile.
      context: .
      dockerfile: ./services/redis/Dockerfile
      args:
        timezone: Asia/Shanghai
        master_port: "6379"
        slaves_port: "6380 6381"
    container_name: redis
    volumes:
      - redis-data:/data
      - ./conf/redis:/etc/redis
      - ./logs/redis:/var/log/redis
    # ports:
    #   - "6379:6379"

  gearman:
    build:
      context: .
      dockerfile: ./services/gearman/Dockerfile
    container_name: gearman
    volumes:
      - ./data/volumes/gearman-latest:/data
      - ./logs/gearmand:/var/log/gearmand
    # ports:
    #   - "4730:4730"

  elasticsearch:
    image: elasticsearch
    container_name: elasticsearch
    volumes:
      - es-data:/usr/share/elasticsearch/data
    ports:
      - "9200:9200"
      - "9300:9300"

  kibana:
    image: kibana
    container_name: kibana
    ports:
      - 5601:5601
    environment:
      - ELASTICSEARCH_URL=http://elasticsearch:9200

  logstash:
    image: logstash
    container_name: logstash

  gogs:
    image: gogs/gogs
    container_name: gogs
    volumes:
      - ./data/volumes/gogs:/var/gogs
    ports:
      - "10022:22"
      - "10080:3000"

  rabbitmq:
    image: rabbitmq:management
    container_name: rabbitmq
    volumes:
      - rq-data:/var/lib/rabbitmq
    ports:
      - "15672:15672"
      - "5672:5672"

  nginx:
    build:
      context: .
      dockerfile: ./services/nginx/Dockerfile
      args:
        timezone: Asia/Shanghai
    container_name: nginx
    environment:
      TIMEZONE: Asia/Shanghai
    ports:
      - "80:80"
      - "443:443"
    # links:
    #   - php5:php5
    volumes:
      - www-data:/var/www
      - ./conf/vhosts:/etc/nginx/conf.d
      - ./logs/nginx:/var/log/nginx

  php5:
    build:
      context: .
      dockerfile: ./services/php/5.6/Dockerfile
      args:
        fpmport: "9000"
        timezone: Asia/Shanghai
    container_name: php5
    hostname: php5-dev
    environment:
      HOSTNAME: php5-dev
    volumes:
      - www-data:/var/www
    # ports:
    #   - "9000:9000"
    # NOTICE: the links can not be extended.
    # links:
    #   - mysql:mysql
    #   - mongo:mongo
    #   - gearman:gearman
    #   - memcached:memcached
    #   - redis:redis
    #   - rabbitmq:rabbitmq
    #   - elasticsearch:elasticsearch

  php7:
    build:
      context: .
      dockerfile: ./services/php/Dockerfile
      args:
        fpmport: "9001"
        timezone: Asia/Shanghai
    container_name: php7
    hostname: php7-dev
    environment:
      HOSTNAME: php7-dev
    volumes:
      - www-data:/var/www
    # NOTICE: the links can not be extended.
    # links:
    #   - mysql:mysql
    #   - mongo:mongo
    #   - redis:redis
    #   - memcached:memcached
    #   - gearman:gearman
    #   - elasticsearch:elasticsearch
    # ports:
    #   - "9001:9000"
    volumes:
      # custom difine the www directory.
      - www-data:/var/www

